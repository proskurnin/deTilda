# -*- coding: utf-8 -*-
"""
htaccess.py ‚Äî –∞–Ω–∞–ª–∏–∑ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ –±–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª Apache (.htaccess)
Detilda v4.4 LTS
"""

from pathlib import Path
from core import logger
import re


def parse_htaccess(file_path: Path) -> dict:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∞–π–ª htaccess –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –º–∞—Ä—à—Ä—É—Ç–æ–≤:
    { "/careers": "page24834967.html", "/careers/": "page24834967.html", ... }
    """
    if not file_path.exists():
        logger.warn(f"‚ö†Ô∏è –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤.")
        return {}

    htaccess_map = {}
    try:
        text = file_path.read_text(encoding="utf-8", errors="ignore")
        lines = text.splitlines()

        # –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è RewriteRule
        rule_pattern = re.compile(r"RewriteRule\s+(\S+)\s+(\S+)", re.IGNORECASE)

        for line in lines:
            if line.strip().startswith("#") or not line.strip():
                continue

            m = rule_pattern.search(line)
            if m:
                pattern, target = m.groups()

                # –ü—Ä–∏–≤–æ–¥–∏–º –ø—É—Ç–∏ –∫ —É–¥–æ–±–Ω–æ–º—É –≤–∏–¥—É
                pattern = pattern.strip("^$")
                if not pattern.startswith("/"):
                    pattern = "/" + pattern

                if target.endswith("[NC]"):
                    target = target.replace("[NC]", "").strip()
                if target.endswith("[L]"):
                    target = target.replace("[L]", "").strip()

                htaccess_map[pattern] = target
                logger.info(f"üîó –ü—Ä–∞–≤–∏–ª–æ –º–∞—Ä—à—Ä—É—Ç–∞: {pattern} ‚Üí {target}")

    except Exception as e:
        logger.err(f"[htaccess] –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ {file_path}: {e}")
        return {}

    if not htaccess_map:
        logger.warn("‚ö†Ô∏è –í htaccess –Ω–µ –Ω–∞–π–¥–µ–Ω–æ RewriteRule.")
    else:
        logger.ok(f"‚úÖ –ê–Ω–∞–ª–∏–∑ htaccess –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∞–π–¥–µ–Ω–æ {len(htaccess_map)} –º–∞—Ä—à—Ä—É—Ç–æ–≤.")

    return htaccess_map